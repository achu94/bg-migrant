{"version":3,"sources":["Context/IsAuthContext.js","components/Header/Navbar/Navbar.js","components/User/Services/user.js","components/User/Register/Register.js","components/User/Login/Login.js","components/User/Profil/Profil.js","components/Forum/Forum.js","components/Forum/postServices.js","components/Forum/posts/NewPost/NewPost.js","components/Forum/posts/Post/Post.js","components/News/News.js","components/Main/Main.js","components/Work/Work.js","components/Blog/Blog.js","components/Specpage/Specpage.js","components/Footer/Footer.js","App.js","services/isAuthService.js","reportWebVitals.js","index.js"],"names":["IsAuthContext","createContext","Navbar","fetch","method","headers","mode","credentials","then","res","text","catch","error","console","log","alert","className","tabIndex","href","action","id","style","width","type","to","this","context","userData","isAuth","username","onClick","onLogoutHandler","activeClassName","Component","contextType","Register","history","useState","isValid","setValidation","email","setEmail","password","setPassword","userNameErrorMessage","setUserNameErrorMessage","passwordErrorMessage","setPasswordErrorMessage","passwordRepErrorMessage","setPasswordRepErrorMessage","emailErrorMessage","setEmailErrorMessage","useContext","hideWarning","set_state_func","setTimeout","userNameValidate","length","test","passwordValidate","passwordRepValidate","passwordRep","emailValidate","OnBLurErrorHandle","e","userInputValue","target","value","validate","onSubmit","preventDefault","repaePassword","eMail","falseCounter","Object","values","forEach","requestOptions","body","JSON","stringify","json","userServices","input","message","push","htmlFor","onBlur","name","onChange","placeholder","disabled","Login","userInfo","setUserData","go","Profil","window","location","userAllInfo","setUser","isLoading","setIsLoading","useEffect","user","_id","posts","map","post","title","topics","topic","Forum","postsData","setPosts","created_at","author","NewPost","postData","postServices","tags","height","Post","match","setPostData","newTopic","setNewTopic","topicInput","useRef","params","data","err","margin","parse","postId","current","ref","rows","post_topics","padding","News","state","newsData","response","setState","fetchNews","news","urlToImage","url","publishedAt","src","alt","Main","display","alignItems","Work","Blog","props","age","bio","occupation","onChangeHandler","bind","Specpage","class","Footer","float","App","user_id","Provider","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4XAEaA,EAAgBC,wBAAc,I,+CCMrCC,E,qKAIF,WCgCOC,MAAM,oCAPU,CACnBC,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAM,OACNC,YAAa,YAIZC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,SAASC,GACZC,QAAQC,IAAI,qCAAsCF,MDjCjDJ,MAAK,SAACC,GACAA,EAAIG,OACHG,MAAM,uB,oBAOtB,WACI,OAEI,sBAAKC,UAAU,aAAf,UACI,sBAAKA,UAAU,eAAf,UACI,sBAAMA,UAAU,OAAhB,SACI,mBAAGC,SAAS,KAAKC,KAAK,IAAtB,0BAKJ,sBAAMC,OAAO,KAAKC,GAAG,cAAchB,OAAO,MAAMiB,MAAO,CAAEC,MAAO,OAAhE,SACI,uBAAON,UAAU,aAAaO,KAAK,OAAOF,MAAO,CAAEC,MAAO,YAG9D,+BACI,oBAAIN,UAAU,aAAd,SACI,cAAC,IAAD,CACIQ,GAAE,UAAKC,KAAKC,QAAQC,SAASC,OAAS,UAAY,aADtD,mBAGQH,KAAKC,QAAQC,SAASC,OAAtB,iDAA2CH,KAAKC,QAAQC,SAASE,SAAjE,KAA8E,0EAG1F,oBAAIb,UAAU,aAAd,SACI,mBACIc,QAASL,KAAKM,gBACdb,KAAI,UAAKO,KAAKC,QAAQC,SAASC,OAAS,IAAM,UAFlD,mBAIQH,KAAKC,QAAQC,SAASC,OAAS,iCAAU,sCAM7D,+BACI,oBAAIZ,UAAU,WAAd,SAAyB,cAAC,IAAD,CAASgB,gBAAgB,kBAAkBR,GAAG,SAA9C,+BACzB,oBAAIR,UAAU,WAAd,SAAyB,cAAC,IAAD,CAASgB,gBAAgB,kBAAkBR,GAAG,WAA9C,oDACzB,oBAAIR,UAAU,WAAd,SAAyB,cAAC,IAAD,CAASgB,gBAAgB,kBAAkBR,GAAG,QAA9C,oDACzB,oBAAIR,UAAU,WAAd,SAAyB,cAAC,IAAD,CAASgB,gBAAgB,kBAAkBR,GAAG,QAA9C,wCACzB,oBAAIR,UAAU,WAAd,SAAyB,cAAC,IAAD,CAASgB,gBAAgB,kBAAkBR,GAAG,YAA9C,mI,GAtDxBS,aAAf/B,EAEKgC,YAAclC,EA2DVE,QEwIAiC,G,MArME,SAAC,GAEX,IADHC,EACE,EADFA,QACE,EAE+BC,oBAAS,GAFxC,mBAEKC,EAFL,KAEcC,EAFd,OAGwBF,mBAAS,sDAHjC,mBAGKG,EAHL,KAGYC,EAHZ,OAI8BJ,mBAAS,IAJvC,mBAIKK,EAJL,KAIeC,EAJf,OAOsDN,mBAAS,IAP/D,mBAOKO,EAPL,KAO2BC,EAP3B,OAQsDR,mBAAS,IAR/D,mBAQKS,EARL,KAQ2BC,EAR3B,OAS4DV,mBAAS,IATrE,mBASKW,EATL,KAS8BC,EAT9B,OAUgDZ,mBAAS,IAVzD,mBAUKa,EAVL,KAUwBC,EAVxB,KAaF,GADiBC,qBAAWpD,GAChB2B,SAASC,OAAQ,OAAO,cAAC,IAAD,CAAUJ,GAAG,YAEjD,IAAM6B,EAAc,SAACC,GACjBC,YAAW,WACPD,EAAe,MAChB,MAGDE,EAAmB,SAAC3B,GAEtB,OAAIA,EAAS4B,OAAS,GAClBZ,EAAwB,mMACjB,GAGL,kBAAkBa,KAAK7B,IAK7BwB,EAAYR,IACL,IALHA,EAAwB,gLACjB,IAOTc,EAAmB,SAACjB,GACtB,OAAIA,EAASe,OAAS,GAClBV,EAAwB,yGACjB,IAGXM,EAAYN,IACL,IAGLa,EAAsB,SAACC,GACzB,OAAIA,IAAgBnB,GAChBO,EAA2B,mHACpB,IAGXI,EAAYJ,IACL,IAGLa,EAAgB,SAACtB,GAEnB,MAAM,iCAAiCkB,KAAKlB,IAK5Ca,EAAYF,IACL,IALHA,EAAqB,mHACd,IAOTY,EAAoB,SAACC,GACvB,IAAIC,EAAiBD,EAAEE,OAAOC,MAE1BC,EAAW,GAIf,GAFA7B,GAAc,GAETyB,EAAEE,OAAOC,MAAd,CAIA,OAAQH,EAAEE,OAAO9C,IACb,IAAK,WACDgD,EAAWZ,EAAiBS,GAC5B,MACJ,IAAK,WACDG,EAAWT,EAAiBM,GAC5B,MACJ,IAAK,eACDG,EAAWR,EAAoBK,GAC/B,MACJ,IAAK,iBACDG,EAAWN,EAAcG,GAO5BG,GACD7B,GAAc,KAqEtB,OACI,qBAAKvB,UAAU,OAAf,SACI,uBAAMqD,SAlEkB,SAACL,GAC7BA,EAAEM,iBAEF,IAAM3C,EAAW,CACb,SAAYqC,EAAEE,OAAOrC,SAASsC,MAC9B,SAAYH,EAAEE,OAAOxB,SAASyB,MAC9B,cAAiBH,EAAEE,OAAO,gBAAgBC,MAC1C,MAASH,EAAEE,OAAO,kBAAkBC,OAGpCC,EAAW,CACX,UAAa,EACb,UAAa,EACb,eAAkB,EAClB,OAAU,GAGdA,EAASvC,SAAW2B,EAAiB7B,EAASE,UAC9CuC,EAAS1B,SAAWiB,EAAiBhC,EAASe,UAC9C0B,EAASG,cAAgBX,EAAoBjC,EAAS4C,eACtDH,EAASI,MAAQV,EAAcnC,EAAS6C,OAExC,IAAIC,EAAe,EACnBC,OAAOC,OAAOP,GAAUQ,SAAQ,SAAUT,GAClCA,GACAM,OAIJA,EAAe,IAInBlC,GAAc,GDhIE,SAACZ,GAGrB,IAAMkD,EAAiB,CACnBzE,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3ByE,KAAMC,KAAKC,UAAUrD,IAGzB,OAAOxB,MAAM,sCAAuC0E,GAC/CrE,MAAK,SAAAC,GAAG,OAAIA,EAAIwE,UAChBtE,OAAM,SAASC,GACZC,QAAQC,IAAI,qCAAsCF,MCsHtDsE,CAAsBvD,GACjBnB,MAAK,SAACC,GAEH,GAAGA,EAAIG,MAAM,CACT,GAAuB,aAApBH,EAAIG,MAAMuE,MAET,YADAtC,EAAwBpC,EAAIG,MAAMwE,SAGtC,GAAuB,UAApB3E,EAAIG,MAAMuE,MAET,YADAhC,EAAqB1C,EAAIG,MAAMwE,cAKnChD,EAAQiD,KAAK,eAiBoBrE,UAAU,YAAnD,UACI,uBAAOsE,QAAQ,WAAf,gHACA,uBAAOC,OAAQxB,EAAmBxC,KAAK,OAAOH,GAAG,WAAWoE,KAAK,aACjE,qBAAKxE,UAAS,oCAA+B4B,EAAuB,wBAA0B,IAA9F,SAAsGA,IAGtG,uBAAO0C,QAAQ,WAAf,mDACA,uBAAOC,OAAQxB,EAAmBxC,KAAK,WAAWH,GAAG,WAAWoE,KAAK,WAAWC,SAd5D,SAACzB,GAC7BA,EAAEM,iBACF3B,EAAYqB,EAAEE,OAAOC,UAab,qBAAKnD,UAAS,oCAA+B8B,EAAuB,wBAA0B,IAA9F,SAAsGA,IAGtG,uBAAOwC,QAAQ,eAAf,sHACA,uBAAOC,OAAQxB,EAAmBxC,KAAK,WAAWH,GAAG,eAAeoE,KAAK,iBACzE,qBAAKxE,UAAS,wCAAmCgC,EAA0B,wBAA0B,IAArG,SAA6GA,IAG7G,uBAAOsC,QAAQ,iBAAf,oGACA,uBAAOC,OAAQxB,EAAmBxC,KAAK,QAAQH,GAAG,iBAAiBoE,KAAK,iBAAiBE,YAAalD,EAAOiD,SA7B5F,SAACzB,GAC1BA,EAAEM,iBACF7B,EAASuB,EAAEE,OAAOC,UA4BV,qBAAKnD,UAAS,iCAA4BkC,EAAoB,wBAA0B,IAAxF,SAAgGA,IAEhG,uBAAOyC,SAAUrD,EAASf,KAAK,SAASP,UAAS,oBAAesB,EAAU,WAAa,IAAM6B,MAAM,sDChIpGyB,G,MAhED,SAAC,GAER,IADHxD,EACE,EADFA,QACE,EAEsDC,mBAAS,IAF/D,mBAEKO,EAFL,KAE2BC,EAF3B,OAGsDR,mBAAS,IAH/D,mBAGKS,EAHL,KAG2BC,EAH3B,KAKE8C,EAAWzC,qBAAWpD,GAI1B,GAAG6F,EAASlE,SAASC,OAAQ,OAAO,cAAC,IAAD,CAAUJ,GAAG,YAEjD,IAAM6B,EAAc,SAACC,GACjBC,YAAW,WACPD,EAAe,MAChB,MA+BP,OACI,qBAAKtC,UAAU,OAAf,SACI,uBAAMqD,SA9Be,SAACL,GAC1BA,EAAEM,iBF3BW,SAAC3C,GAGlB,IAAMkD,EAAiB,CACnBzE,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3ByE,KAAMC,KAAKC,UAAUrD,GACrBrB,KAAM,OACNC,YAAa,WAGjB,OAAOJ,MAAM,mCAAoC0E,GAC5CrE,MAAM,SAAAC,GAAG,OAAIA,EAAIwE,UACjBtE,OAAM,SAASC,GACZC,QAAQC,IAAI,qCAAsCF,MEoBtDsE,CALkB,CACdrD,SAAUmC,EAAEE,OAAOrC,SAASsC,MAC5BzB,SAAUsB,EAAEE,OAAOxB,SAASyB,QAI3B3D,MAAK,SAACC,GACH,GAAGA,EAAIG,MAAM,CACT,GAAuB,aAApBH,EAAIG,MAAMuE,MAGT,OAFAtC,EAAwBpC,EAAIG,MAAMwE,cAClC/B,EAAYR,GAGhB,GAAuB,aAApBpC,EAAIG,MAAMuE,MAGT,OAFApC,EAAwBtC,EAAIG,MAAMwE,cAClC/B,EAAYN,QAKhB8C,EAASC,YAAYrF,GACrB2B,EAAQ2D,GAAG,OAMoB/E,UAAU,YAAjD,UACI,uBAAOsE,QAAQ,WAAf,+GACA,uBAAO/D,KAAK,OAAOH,GAAG,WAAWoE,KAAK,aACtC,qBAAKxE,UAAS,iCAA4B4B,EAAuB,wBAA0B,IAA3F,SAAmGA,IAEnG,uBAAO0C,QAAQ,WAAf,kDACA,uBAAO/D,KAAK,WAAWH,GAAG,WAAWoE,KAAK,aAC1C,qBAAKxE,UAAS,iCAA4B8B,EAAuB,wBAA0B,IAA3F,SAAmGA,IAEnG,uBAAOvB,KAAK,SAASP,UAAU,YAAYmD,MAAM,sDCJlD6B,G,MArDA,SAAC,GAAc,EAAb5D,QACIgB,qBAAWpD,GACf2B,SAASC,SAAQqE,OAAOC,SAAShF,KAAO,UAF3B,MAIKmB,qBAJL,mBAInB8D,EAJmB,KAINC,EAJM,OAKQ/D,oBAAS,GALjB,mBAKnBgE,EALmB,KAKRC,EALQ,KAgB1B,OATAC,qBAAU,WH6CHpG,MAAM,8BAPU,CACnBC,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAM,OACNC,YAAa,YAIZC,MAAK,SAAAC,GAAG,OAAIA,EAAIwE,UAChBtE,OAAM,SAASC,GACZC,QAAQC,IAAI,qCAAsCF,MG9CrDJ,MAAM,SAACgG,GACJJ,EAAQI,GACRF,GAAa,GACbzF,QAAQC,IAAI0F,QAEjB,CAACH,IAGA,qBAAKrF,UAAU,OAAf,SACKmF,IAAgBE,EACb,qCACI,sBAAKrF,UAAU,YAAf,UACI,sBAAMA,UAAU,mBAAhB,SAAoCmF,EAAYtE,WAChD,mDAAYsE,EAAYM,OACxB,4HAAyBN,EAAY3B,YAEzC,4EACA,sBAAKxD,UAAU,gBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,4EACA,6BACKmF,EAAYO,MAAMC,KAAK,SAAAC,GACpB,OAAO,mCAAoB,eAAC,IAAD,CAAMpF,GAAE,gBAAWoF,EAAKH,KAAxB,cAAiCG,EAAKC,MAAtC,SAAXD,EAAKH,aAIjC,sBAAKzF,UAAU,gBAAf,UACI,wFACA,6BACCmF,EAAYW,OAAOH,KAAK,SAAAI,GACjB,OAAO,6BAAsBA,EAAMjC,MAAnBiC,EAAMN,mBAOtC,qBAAKzF,UAAU,eCJpBgG,G,MA5CD,SAAC,GAET,EADF5E,QACG,IAAD,EAE4BC,qBAF5B,mBAEK4E,EAFL,KAEgBC,EAFhB,OAGgC7E,oBAAS,GAHzC,mBAGKgE,EAHL,KAGgBC,EAHhB,KAKFC,qBAAU,WCyBHpG,MAAM,8BAPU,CACnBC,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAM,OACNC,YAAa,YAIZC,MAAK,SAAAC,GAAG,OAAIA,EAAIwE,UAChBtE,OAAM,SAASC,GACZC,QAAQC,IAAI,qCAAsCF,MD1BjDJ,MAAM,SAACkG,GACJQ,EAASR,GACTJ,GAAa,QAEtB,IAMH,OACI,qBAAKtF,UAAU,OAAf,SACI,qBAAIA,UAAU,aAAd,UACA,sBAAKA,UAAU,eAAf,UACI,wHACA,wBAAQc,QATE,WAClBmE,OAAOC,SAAShF,KAAO,cAQiBF,UAAU,qBAA1C,oFAEEqF,EAWE,qBAAKrF,UAAU,WAVfiG,EAAUN,KAAK,SAACC,GACZ,OACI,+BACI,eAAC,IAAD,CAASpF,GAAE,iBAAYoF,EAAKH,KAA5B,cAAoC,oBAAIzF,UAAU,oBAAd,oBAAwC4F,EAAKC,MAAQD,EAAKC,MAAQ,QAAlE,OAApC,OACA,sBAAM7F,UAAU,kBAAhB,oBAAuC4F,EAAKO,WAAaP,EAAKO,WAAa,OAA3E,OACA,sBAAMnG,UAAU,kBAAhB,oBAAuC4F,EAAKQ,OAASR,EAAKQ,OAAOvF,SAAW,SAA5E,SAHK+E,EAAKH,e,6BEzB3B,SAASY,EAAT,GAEZ,EADCjF,QAwBA,OArBegB,qBAAWpD,GAqBb2B,SAASC,OAGlB,qBAAKZ,UAAU,OAAf,SACI,uBAAMqD,SAvBe,SAACL,GAC1BA,EAAEM,iBDjBa,SAACgD,GAEpB,IAAMzC,EAAiB,CACnBzE,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3ByE,KAAMC,KAAKC,UAAUsC,GACrBhH,KAAM,OACNC,YAAa,WAGjB,OAAOJ,MAAM,kCAAmC0E,GAC3CrE,MAAK,SAAAC,GAAG,OAAIA,EAAIwE,UAChBtE,OAAM,SAASC,GACZC,QAAQC,IAAI,qCAAsCF,MCYtD2G,CANiB,CACbV,MAAO7C,EAAEE,OAAO2C,MAAM1C,MACtBW,KAAMd,EAAEE,OAAOY,KAAKX,MACpBqD,KAAMxD,EAAEE,OAAOsD,KAAKrD,QAInB3D,MAAK,SAACC,GACAA,EAAIG,MACHG,MAAM,0BAGNkF,OAAOC,SAAShF,KAAO,UAAYT,MAQJO,UAAU,gBAAjD,UACI,sBAAKA,UAAU,sBAAf,UACI,uBAAOA,UAAU,iBAAiBsE,QAAQ,QAA1C,8DACA,qBAAKtE,UAAU,uBAAf,yWAGA,uBAAOO,KAAK,OAAOH,GAAG,QAAQoE,KAAK,aAGvC,sBAAKxE,UAAU,qBAAf,UACI,uBAAOA,UAAU,gBAAgBsE,QAAQ,OAAzC,sCACA,qBAAKtE,UAAU,uBAAf,wcAIA,qBAAKA,UAAU,oBAAf,SACI,cAAC,IAAD,CAAWwE,KAAK,OAAOiC,OAAO,aAItC,sBAAKzG,UAAU,qBAAf,UACI,uBAAOA,UAAU,gBAAgBsE,QAAQ,OAAzC,wDACA,qBAAKtE,UAAU,uBAAf,qYAGA,uBAAOO,KAAK,OAAOH,GAAG,OAAOoE,KAAK,YAGtC,uBAAOjE,KAAK,SAASP,UAAU,qBAAqBmD,MAAM,oDAhCjC,cAAC,IAAD,CAAU3C,GAAG,W,YC8DvCkG,G,MAzFF,SAAC,GAAwB,IAAtBtF,EAAqB,EAArBA,QAASuF,EAAY,EAAZA,MAEnB9B,EAAWzC,qBAAWpD,GAFS,EAGHqC,mBAAS,CACvCwE,MAAO,GACP/B,KAAM,GACN0C,KAAM,GACNJ,OAAS,CACLX,IAAK,GACL5E,SAAW,MATkB,mBAG5ByF,EAH4B,KAGlBM,EAHkB,OAYHvF,mBAAS,CACvCyC,KAAO,KAb0B,mBAY5B+C,EAZ4B,KAYlBC,EAZkB,OAeDzF,oBAAS,GAfR,mBAe5BgE,EAf4B,KAejBC,EAfiB,KAiB7ByB,EAAaC,iBAAO,MA6B1B,OAVAzB,qBAAU,WF3BW,IAACnF,KE4BCuG,EAAMM,OAAO7G,GFtB3BjB,MAAM,+BAAiCiB,EALvB,CACnBhB,OAAQ,MACRC,QAAS,CAAE,eAAgB,sBAI1BG,MAAK,SAAAC,GAAG,OAAIA,EAAIwE,UAChBtE,OAAM,SAASC,GACZC,QAAQC,IAAI,qCAAsCF,OEmBpBJ,MAAK,SAAC0H,EAAMC,GAC5CA,IAEJP,EAAYM,GACZ5B,GAAa,SAGd,CAACD,IAGF,sBAAKrF,UAAU,OAAf,UACE,sBAAKK,MAAO,CAAC+G,OAAQ,QAArB,UACI,qBAAKpH,UAAU,aAAf,SAA6BsG,EAAST,MAAQS,EAAST,MAAQ,UAC/D,qBAAK7F,UAAU,YAAf,SAA4BsG,EAASF,OAASiB,YAAMf,EAASxC,MAAO,SACpE,qBAAK9D,UAAU,cAAf,SAA8BsG,EAASF,OAASE,EAASF,OAAOvF,SAAW,WAC3E,qBAAKb,UAAU,cAAf,SAA8BsG,EAASH,WAAaG,EAASH,WAAa,YAE9E,sBAAKnG,UAAU,aAAf,UACE,wBAAQc,QApCI,WAChB,OAAI+F,EACAhC,EAASlE,SAASC,QAGtB0E,GAAa,QFaO,SAACxB,EAAMwD,GAC3B,IAAMzD,EAAiB,CACnBzE,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3ByE,KAAMC,KAAKC,UAAUF,GACrBxE,KAAM,OACNC,YAAa,WAGjB,OAAOJ,MAAM,+BAAD,OAAgCmI,EAAhC,aAAmDzD,GAC1DrE,MAAK,SAAAC,GAAG,OAAIA,EAAIwE,UAChBtE,OAAM,SAASC,GACZC,QAAQC,IAAI,qCAAsCF,MExB1D2G,CAAsBM,EAAUF,EAAMM,OAAO7G,IAAIZ,MAAM,SAACsG,EAAQqB,GAC1DA,IACJJ,EAAWQ,QAAQpE,MAAQ,GAC3B2D,EAAY,SAPuB1F,EAAQiD,KAAK,UAD7BtE,MAAM,uBAmCKC,UAAU,qBAAtC,8DACA,0BACEwH,IAAKT,EACLtC,SA1BY,SAACzB,GACnB8D,EAAY,CAAChD,KAAOd,EAAEE,OAAOC,SA0BvBnD,UAAU,sBACVwE,KAAK,YACLpE,GAAG,YACHqH,KAAK,SAGT,qBAAIzH,UAAU,cAAd,UACE,wFACEsG,EAASoB,cAAgBrC,EACzBiB,EAASoB,YAAY/B,KAAI,SAAAI,GACvB,OACE,6BACE,gCACE,qBAAK1F,MAAO,CAACsH,QAAS,UAAtB,SAAkC5B,EAAMjC,OACxC,sBAAK9D,UAAU,kBAAf,UACE,qCAAS+F,EAAMI,WAAf,OACA,uBAAMnG,UAAU,eAAhB,eAAmC+F,EAAMK,OAAOvF,mBAL7CkF,EAAMN,QAYjB,qBAAKzF,UAAU,mBChCZ4H,G,kNApDXC,MAAQ,CACJxC,WAAW,EACXyC,SAAU,GACVlI,MAAO,M,+CAGX,WAAa,IAAD,OAERT,MAAM,8BACDK,MAAK,SAAAuI,GAAQ,OAAIA,EAAS9D,UAE1BzE,MAAK,SAAA0H,GAAI,OACN,EAAKc,SAAS,CACVF,SAAUZ,EACV7B,WAAW,OAIlB1F,OAAM,SAAAC,GAAK,OAAI,EAAKoI,SAAS,CAAEpI,QAAOyF,WAAW,S,+BAG1D,WACI5E,KAAKwH,c,oBAGT,WAAU,IAAD,EACkCxH,KAAKoH,MAApCxC,EADH,EACGA,UAAWyC,EADd,EACcA,SAAUlI,EADxB,EACwBA,MAC7B,OACI,sBAAKI,UAAU,OAAf,UACI,oIACCJ,EAAQ,4BAAIA,EAAMwE,UAAe,KAEhCiB,EAaE,qBAAKrF,UAAU,WAZf8H,EAASnC,KAAI,SAAAuC,GAAS,IACVrC,EAA8CqC,EAA9CrC,MAAOO,EAAuC8B,EAAvC9B,OAAO+B,EAAgCD,EAAhCC,WAAWC,EAAqBF,EAArBE,IAAKC,EAAgBH,EAAhBG,YACtC,OACI,0BAASrI,UAAU,UAAnB,UACI,qBAAKsI,IAAKH,EAAYI,IAAI,KAC1B,mBAAGrF,OAAO,UAAUhD,KAAMkI,EAA1B,SAA+B,6BAAKvC,MACpC,yCAAYO,KACZ,qGAAiBiC,OAJaxC,a,GAtC3C5E,cCUJuH,EAXF,WACX,OACE,qBAAKxI,UAAU,OAAf,SACE,sBAAKK,MAAO,CAACoI,QAAS,OAAQC,WAAY,YAA1C,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UC2BOC,EAnCF,WAeT,OACI,qBAAK3I,UAAU,OAAf,SACI,0H,gBC4DG4I,E,kDAjEX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAEDhB,MAAQ,CACThH,SAAU,OACViI,IAAM,GACNC,IAAM,gBACNC,WAAa,cAGjB,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBAVT,E,wDAalB,SAAqBlG,GACjBA,EAAEM,mB,qCAGN,SAAwBN,GACpBA,EAAEM,iBADqB,MAGE7C,KAAKoH,MAHP,EAGhBhH,SAHgB,EAGNiI,M,6BAGrB,SAAgB9F,GACZvC,KAAKuH,SAAL,eAAgBhF,EAAEE,OAAOsB,KAAQxB,EAAEE,OAAOC,U,oBAG9C,WACI,OACI,qBAAKnD,UAAU,oBAAf,SACA,6H,GAhCOiB,aCAJkI,EAVE,WACb,OACI,qBAAKC,MAAM,OAAX,SACI,0HCQKC,G,MATF,WAEb,OACI,qBAAKrJ,UAAU,SAAf,SACE,mBAAGK,MAAO,CAACiJ,MAAO,SAAlB,2CCoEOC,MAlDf,WAAgB,IAAD,EAEmBlI,mBAAS,CACvCT,QAAS,EACT4I,QAAU,GACV3I,SAAW,KALA,mBAENF,EAFM,KAEImE,EAFJ,KAqBb,OAbES,qBAAU,WCrBHpG,MAAM,yBARU,CACnBC,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAE3BC,KAAM,OACNC,YAAa,YAIZC,MAAM,SAAAC,GAAG,OAAIA,EAAIwE,UACjBtE,OAAM,SAASC,GACZC,QAAQC,IAAI,qCAAsCF,MDoBjDJ,MAAM,SAACC,GACDA,EAAIG,MACHG,MAAM,sBAIV+E,EAAYrF,QAGrB,IAKH,sBAAKO,UAAU,MAAf,UACM,eAAChB,EAAcyK,SAAf,CAAwBtG,MAAO,CAACxC,WAAUmE,eAA1C,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4E,KAAK,IAAIC,OAAK,EAACC,UAAWpB,IACjC,cAAC,IAAD,CAAOkB,KAAK,SAASE,UAAWhF,IAChC,cAAC,IAAD,CAAO8E,KAAK,YAAYE,UAAWzI,IACnC,cAAC,IAAD,CAAOuI,KAAK,UAAUE,UAAW5E,IAEjC,cAAC,IAAD,CAAO0E,KAAK,aAAaC,OAAK,EAACC,UAAWvD,IAC1C,cAAC,IAAD,CAAOqD,KAAK,aAAaE,UAAWlD,IAEpC,cAAC,IAAD,CAAOgD,KAAK,SAASE,UAAW5D,IAChC,cAAC,IAAD,CAAO0D,KAAK,iBAAiBE,UAAWhC,IACxC,cAAC,IAAD,CAAO8B,KAAK,QAAQE,UAAWjB,IAC/B,cAAC,IAAD,CAAOe,KAAK,QAAQE,UAAWhB,IAC/B,cAAC,IAAD,CAAOc,KAAK,YAAYE,UAAWT,IACnC,cAAC,IAAD,CAAOS,UAAW,kBAAM,uDAIhC,cAAC,EAAD,QEzDSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvK,MAAK,YAAkD,IAA/CwK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACE,cAAC,EAAD,QAGNC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a5a0fb77.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const IsAuthContext = createContext({});","import { Component } from 'react';\r\nimport {NavLink } from 'react-router-dom';\r\nimport { IsAuthContext } from '../../../Context/IsAuthContext';\r\n\r\nimport * as userServices from '../../User/Services/user';\r\n\r\nimport './Navbar.css';\r\n\r\nclass Navbar extends Component {\r\n\r\n    static contextType = IsAuthContext;\r\n\r\n    onLogoutHandler(){\r\n        userServices.logout()\r\n            .then((res) => {\r\n                if(res.error){\r\n                    alert('Logout Error !');\r\n                } else {\r\n                    \r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <nav className=\"navigation\" >\r\n                <div className=\"nav-header-1\" >\r\n                    <span className=\"logo\">\r\n                        <a tabIndex=\"-1\" href=\"/\">\r\n                            BG-MIGRANT\r\n                        </a>\r\n                    </span>\r\n\r\n                    <form action=\"/q\" id=\"search-form\" method=\"get\" style={{ width: \"50%\" }} >\r\n                        <input className=\"search-bar\" type=\"text\" style={{ width: \"100%\" }} />\r\n                    </form>\r\n\r\n                    <ul>\r\n                        <li className=\"listItem-2\">\r\n                            <NavLink\r\n                                to={`${this.context.userData.isAuth ? '/profil' : '/register'}`}\r\n                            >\r\n                                {`${this.context.userData.isAuth ? `Профил, (${this.context.userData.username})`: 'Регистрация'}`}\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className=\"listItem-2\">\r\n                            <a\r\n                                onClick={this.onLogoutHandler} \r\n                                href={`${this.context.userData.isAuth ? '/' : '/login'}`}\r\n                            > \r\n                                {`${this.context.userData.isAuth ? 'Изход' : 'Вход'}`}\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n\r\n                </div>\r\n                <ul>\r\n                    <li className=\"listItem\"><NavLink activeClassName=\"listItem_active\" to=\"/forum\">Фoruм</NavLink></li>\r\n                    <li className=\"listItem\"><NavLink activeClassName=\"listItem_active\" to=\"/news/bg\">Новини</NavLink></li>\r\n                    <li className=\"listItem\"><NavLink activeClassName=\"listItem_active\" to=\"/work\">Работа</NavLink></li>\r\n                    <li className=\"listItem\"><NavLink activeClassName=\"listItem_active\" to=\"/blog\">Блог</NavLink></li>\r\n                    <li className=\"listItem\"><NavLink activeClassName=\"listItem_active\" to=\"/specpage\">Българскo в Германия</NavLink></li>\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","export const login = (userData) => {\r\n\r\n    // Simple POST request with a JSON body using fetch\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(userData),\r\n        mode: 'cors',\r\n        credentials: 'include'\r\n    };\r\n\r\n    return fetch('http://localhost:5000/user/login', requestOptions)\r\n        .then( res => res.json())\r\n        .catch(function(error) {\r\n            console.log('Looks like there was a problem: \\n', error);\r\n        });\r\n}\r\n\r\nexport const register = (userData) => {\r\n\r\n    // Simple POST request with a JSON body using fetch\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(userData)\r\n    };\r\n\r\n    return fetch('http://localhost:5000/user/register', requestOptions)\r\n        .then(res => res.json())\r\n        .catch(function(error) {\r\n            console.log('Looks like there was a problem: \\n', error);\r\n        });\r\n}\r\n\r\nexport const logout = () => {\r\n\r\n    // Simple POST request with a JSON body using fetch\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        mode: 'cors',\r\n        credentials: 'include'\r\n    };\r\n\r\n    return fetch('http://localhost:5000/user/logout', requestOptions)\r\n        .then(res => res.text())\r\n        .catch(function(error) {\r\n            console.log('Looks like there was a problem: \\n', error);\r\n        });\r\n}\r\n\r\nexport const getUserInfo = () => {\r\n    // Simple POST request with a JSON body using fetch\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        mode: 'cors',\r\n        credentials: 'include'\r\n    };\r\n\r\n    return fetch('http://localhost:5000/user/', requestOptions)\r\n        .then(res => res.json())\r\n        .catch(function(error) {\r\n            console.log('Looks like there was a problem: \\n', error);\r\n        });\r\n}","import React, { useState, useContext } from 'react';\r\nimport {Redirect } from \"react-router-dom\";\r\nimport { IsAuthContext } from '../../../Context/IsAuthContext';\r\n\r\nimport * as userServices from '../Services/user';\r\n\r\nimport './Register.css';\r\n\r\nconst Register = ({\r\n    history,\r\n}) => {\r\n\r\n    const [isValid, setValidation] = useState(true);\r\n    const [email, setEmail] = useState('абв@абв.бг');\r\n    const [password, setPassword] = useState('');\r\n\r\n\r\n    const [userNameErrorMessage, setUserNameErrorMessage] = useState('');\r\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState('');\r\n    const [passwordRepErrorMessage, setPasswordRepErrorMessage] = useState('');\r\n    const [emailErrorMessage, setEmailErrorMessage] = useState('');\r\n\r\n    const userInfo = useContext(IsAuthContext);\r\n    if(userInfo.userData.isAuth) return <Redirect to=\"/profil\" />\r\n\r\n    const hideWarning = (set_state_func) => {\r\n        setTimeout(() => {\r\n            set_state_func('');\r\n        }, 3000)\r\n    }\r\n\r\n    const userNameValidate = (username) => {\r\n\r\n        if (username.length < 3) {\r\n            setUserNameErrorMessage('Потребителското име е твърде кратко');\r\n            return true;\r\n        }\r\n\r\n        if (!(/^[a-zA-Z0-9_]+$/.test(username))) {\r\n            setUserNameErrorMessage('Потребителското име е невалиден');\r\n            return true;\r\n        }\r\n\r\n        hideWarning(setUserNameErrorMessage);\r\n        return false;\r\n    }\r\n\r\n    const passwordValidate = (password) => {\r\n        if (password.length < 4) {\r\n            setPasswordErrorMessage('Паролaтa е невалиден');\r\n            return true;\r\n        }\r\n\r\n        hideWarning(setPasswordErrorMessage);\r\n        return false;\r\n    }\r\n\r\n    const passwordRepValidate = (passwordRep) => {\r\n        if (passwordRep !== password) {\r\n            setPasswordRepErrorMessage('Паролите не съвпадат');\r\n            return true;\r\n        }\r\n\r\n        hideWarning(setPasswordRepErrorMessage);\r\n        return false;\r\n    }\r\n\r\n    const emailValidate = (email) => {\r\n\r\n        if (!(/^[^@\\s]+@[^@\\s\\.]+\\.[^@\\.\\s]+$/.test(email))) {\r\n            setEmailErrorMessage('Email адресът е невалиден');\r\n            return true;\r\n        }\r\n\r\n        hideWarning(setEmailErrorMessage);\r\n        return false;\r\n    }\r\n\r\n    const OnBLurErrorHandle = (e) => {\r\n        let userInputValue = e.target.value;\r\n\r\n        let validate = '';\r\n\r\n        setValidation(true);\r\n\r\n        if (!e.target.value) {\r\n            return;\r\n        }\r\n\r\n        switch (e.target.id) {\r\n            case 'username':\r\n                validate = userNameValidate(userInputValue);\r\n                break;\r\n            case 'password':\r\n                validate = passwordValidate(userInputValue);\r\n                break;\r\n            case 'password-rep':\r\n                validate = passwordRepValidate(userInputValue);\r\n                break;\r\n            case 'register-email':\r\n                validate = emailValidate(userInputValue);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (!validate) {\r\n            setValidation(false);\r\n        }\r\n    }\r\n\r\n\r\n    const onSubmitRegisterHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const userData = {\r\n            \"username\": e.target.username.value,\r\n            \"password\": e.target.password.value,\r\n            \"repaePassword\": e.target[\"password-rep\"].value,\r\n            \"eMail\": e.target[\"register-email\"].value\r\n        };\r\n\r\n        let validate = {\r\n            \"username\" : true,\r\n            \"password\" : true,\r\n            \"repaePassword\" : true,\r\n            \"eMail\" : true\r\n        };\r\n\r\n        validate.username = userNameValidate(userData.username);\r\n        validate.password = passwordValidate(userData.password);\r\n        validate.repaePassword = passwordRepValidate(userData.repaePassword);\r\n        validate.eMail = emailValidate(userData.eMail);\r\n\r\n        let falseCounter = 0;\r\n        Object.values(validate).forEach(function (value) {\r\n            if(!value){\r\n                falseCounter++;\r\n            }\r\n        });\r\n\r\n        if (falseCounter < 4) {\r\n            return;            \r\n        }\r\n\r\n        setValidation(false);\r\n\r\n        userServices.register(userData)\r\n            .then((res) => {\r\n\r\n                if(res.error){\r\n                    if(res.error.input === 'username'){\r\n                        setUserNameErrorMessage(res.error.message);\r\n                        return;\r\n                    } \r\n                    if(res.error.input === 'eMail'){\r\n                        setEmailErrorMessage(res.error.message);\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    history.push('/login');\r\n                }                \r\n            });\r\n    }\r\n\r\n    const onEmailChangeHandler = (e) => {\r\n        e.preventDefault();\r\n        setEmail(e.target.value);\r\n    };\r\n\r\n    const onPasswordChangeHandler = (e) => {\r\n        e.preventDefault();\r\n        setPassword(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <form onSubmit={onSubmitRegisterHandler} className=\"user-form\" >\r\n                <label htmlFor=\"username\">Потребителско име*</label>\r\n                <input onBlur={OnBLurErrorHandle} type=\"text\" id=\"username\" name=\"username\" />\r\n                <div className={`register_warning_username ${userNameErrorMessage ? \"register_warning_show\" : ''}`} >{userNameErrorMessage}</div>\r\n\r\n\r\n                <label htmlFor=\"password\">Парола*</label>\r\n                <input onBlur={OnBLurErrorHandle} type=\"password\" id=\"password\" name=\"password\" onChange={onPasswordChangeHandler} />\r\n                <div className={`register_warning_password ${passwordErrorMessage ? \"register_warning_show\" : ''}`} >{passwordErrorMessage}</div>\r\n\r\n\r\n                <label htmlFor=\"password_rep\">Повторете паролата*</label>\r\n                <input onBlur={OnBLurErrorHandle} type=\"password\" id=\"password-rep\" name=\"password-rep\" />\r\n                <div className={`register_warning_password_rep ${passwordRepErrorMessage ? \"register_warning_show\" : ''}`} >{passwordRepErrorMessage}</div>\r\n\r\n\r\n                <label htmlFor=\"register_email\">Електронна поща*</label>\r\n                <input onBlur={OnBLurErrorHandle} type=\"email\" id=\"register-email\" name=\"register-email\" placeholder={email} onChange={onEmailChangeHandler} />\r\n                <div className={`register_warning_email ${emailErrorMessage ? \"register_warning_show\" : ''}`} >{emailErrorMessage}</div>\r\n\r\n                <input disabled={isValid} type=\"submit\" className={`user-send ${isValid ? \"disabled\" : \"\"}`} value=\"изпрати\" />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;","import React, {useState, useContext} from 'react';\r\nimport {Redirect } from \"react-router-dom\";\r\nimport { IsAuthContext } from '../../../Context/IsAuthContext';\r\n\r\nimport '../Login/Login.css';\r\nimport * as userServices from '../Services/user';\r\n\r\nconst Login = ({\r\n    history,\r\n}) => {\r\n\r\n    const [userNameErrorMessage, setUserNameErrorMessage] = useState('');\r\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState('');\r\n\r\n    let userInfo = useContext(IsAuthContext);\r\n    // if(userInfo.userData.isAuth) history.push('/profil');\r\n\r\n\r\n    if(userInfo.userData.isAuth) return <Redirect to=\"/profil\" />\r\n\r\n    const hideWarning = (set_state_func) => {\r\n        setTimeout(() => {\r\n            set_state_func('');\r\n        }, 3000)\r\n    }\r\n\r\n    const onSubmitLoginHandler = (e) => {\r\n        e.preventDefault();\r\n    \r\n        const userInput = {\r\n            username: e.target.username.value,\r\n            password: e.target.password.value\r\n        };\r\n    \r\n        userServices.login(userInput)\r\n            .then((res) => {\r\n                if(res.error){\r\n                    if(res.error.input === 'username'){\r\n                        setUserNameErrorMessage(res.error.message)\r\n                        hideWarning(setUserNameErrorMessage);\r\n                        return;\r\n                    }\r\n                    if(res.error.input === 'password'){\r\n                        setPasswordErrorMessage(res.error.message);\r\n                        hideWarning(setPasswordErrorMessage);\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    userInfo.setUserData(res);\r\n                    history.go(0);\r\n                }     \r\n            })\r\n    }\r\n    return(\r\n        <div className=\"main\">\r\n            <form onSubmit={onSubmitLoginHandler}  className=\"user-form\" >\r\n                <label htmlFor=\"username\">Потребителско име</label>\r\n                <input type=\"text\" id=\"username\" name=\"username\" />\r\n                <div className={`login_warning_username ${userNameErrorMessage ? \"register_warning_show\" : ''}`} >{userNameErrorMessage}</div>\r\n\r\n                <label htmlFor=\"password\">Парола</label>\r\n                <input type=\"password\" id=\"password\" name=\"password\" />\r\n                <div className={`login_warning_password ${passwordErrorMessage ? \"register_warning_show\" : ''}`} >{passwordErrorMessage}</div>\r\n\r\n                <input type=\"submit\" className=\"user-send\" value=\"изпрати\" />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import {useContext, useEffect, useState} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport { IsAuthContext } from '../../../Context/IsAuthContext';\r\n\r\nimport * as userServices from '../Services/user';\r\n\r\nimport './Profil.css';\r\n\r\nconst Profil = ({history}) => {\r\n    const userInfo = useContext(IsAuthContext);\r\n    if(!userInfo.userData.isAuth) window.location.href = '/login';\r\n    \r\n    const [userAllInfo, setUser] = useState();    \r\n    const [isLoading, setIsLoading] = useState(true);   \r\n    \r\n    useEffect(() => {\r\n        userServices.getUserInfo()\r\n        .then( (user) => {\r\n            setUser(user);\r\n            setIsLoading(false);\r\n            console.log(user);\r\n        })\r\n    }, [isLoading]);\r\n    \r\n    return(\r\n        <div className=\"main\">\r\n            {userAllInfo && !isLoading ? (\r\n                <>\r\n                    <div className=\"user-info\">\r\n                        <span className=\"user-info-header\">{userAllInfo.username}</span> \r\n                        <span> ИД: {userAllInfo._id}</span>\r\n                        <span> Електронна поща: {userAllInfo.eMail}</span>                \r\n                    </div>\r\n                    <h1>Дейност</h1>\r\n                    <div className=\"user-activity\">\r\n                        <div className=\"user-questions\">\r\n                            <h2>Въпроси</h2>\r\n                            <ul>\r\n                                {userAllInfo.posts.map( post => {\r\n                                    return <li key={post._id}> <Link to={`posts/${post._id}`}> {post.title} </Link></li>\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"user-comments\">\r\n                            <h2>Коментари</h2>\r\n                            <ul>\r\n                            {userAllInfo.topics.map( topic => {\r\n                                    return <li key={topic._id} >{topic.body}</li>\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    </>\r\n                ) : (\r\n                    <div className=\"loader\"></div>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profil;","import {useState, useEffect} from 'react';\r\nimport {NavLink } from 'react-router-dom';\r\n\r\nimport './Forum.css';\r\nimport * as postSerivces from './postServices';\r\n\r\nconst Forum = ({\r\n    history,\r\n}) => {\r\n\r\n    const [postsData, setPosts] = useState();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        postSerivces.getAll()\r\n            .then( (posts) => {\r\n                setPosts(posts);\r\n                setIsLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    const newPostHandle = () => {\r\n        window.location.href = '/posts/new';\r\n    }\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <ul className=\"forum-list\" >\r\n            <div className=\"forum-header\">\r\n                <h1>Най-нови въпроси</h1>\r\n                <button onClick={newPostHandle} className=\"forum-btn-new-post\">Задай въпрос</button>\r\n            </div>\r\n                {!isLoading ? (\r\n                    postsData.map( (post) => {\r\n                        return(\r\n                            <li key={post._id} >\r\n                                <NavLink to={`/posts/${post._id}`}> <h3 className=\"forum-list-header\" >{` ${post.title ? post.title : 'TITLE'} `}</h3> </NavLink>\r\n                                <span className=\"forum-list-time\">{` ${post.created_at ? post.created_at : 'TIME'} `}</span>\r\n                                <span className=\"forum-list-user\">{` ${post.author ? post.author.username : 'AUTHOR'} `}</span>\r\n                            </li>\r\n                        )\r\n                    })\r\n                ) : (\r\n                    <div className=\"loader\"></div>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Forum;","export const newPost = (postData) => {\r\n    // Simple POST request with a JSON body using fetch\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(postData),\r\n        mode: 'cors',\r\n        credentials: 'include'\r\n    };\r\n\r\n    return fetch('http://localhost:5000/posts/new', requestOptions)\r\n        .then(res => res.json())\r\n        .catch(function(error) {\r\n            console.log('Looks like there was a problem: \\n', error);\r\n        });\r\n}\r\n\r\nexport const getPost = (id) => {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' }\r\n    };\r\n\r\n    return fetch('http://localhost:5000/posts/' + id, requestOptions)\r\n        .then(res => res.json())\r\n        .catch(function(error) {\r\n            console.log('Looks like there was a problem: \\n', error);\r\n        });\r\n}\r\n\r\nexport const getAll = () => {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        mode: 'cors',\r\n        credentials: 'include'\r\n    };\r\n\r\n    return fetch('http://localhost:5000/posts', requestOptions)\r\n        .then(res => res.json())\r\n        .catch(function(error) {\r\n            console.log('Looks like there was a problem: \\n', error);\r\n        });\r\n}\r\n\r\nexport const newTopic = (body, postId) => {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(body),\r\n        mode: 'cors',\r\n        credentials: 'include'\r\n    };\r\n\r\n    return fetch(`http://localhost:5000/posts/${postId}/newtopic`, requestOptions)\r\n        .then(res => res.json())\r\n        .catch(function(error) {\r\n            console.log('Looks like there was a problem: \\n', error);\r\n        });\r\n}","import React, {useContext } from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport SunEditor from 'suneditor-react';\r\nimport { IsAuthContext } from '../../../../Context/IsAuthContext';\r\n\r\nimport './NewPost.css';\r\nimport 'suneditor/dist/css/suneditor.min.css'; // Import Sun Editor's CSS File\r\n\r\nimport * as postServices from '../../postServices';\r\n\r\nexport default function NewPost({\r\n    history,\r\n}) {\r\n\r\n    let userInfo = useContext(IsAuthContext);\r\n\r\n    const onSubmitLoginHandler = (e) => {\r\n        e.preventDefault();\r\n    \r\n        const postData = {\r\n            title: e.target.title.value,\r\n            body: e.target.body.value,\r\n            tags: e.target.tags.value\r\n        };\r\n\r\n        postServices.newPost(postData)\r\n            .then((res) => {\r\n                if(res.error){\r\n                    alert('Some thing went wrong!');\r\n                }\r\n                else {\r\n                    window.location.href = '/posts/' + res;\r\n                }     \r\n            })\r\n    }\r\n    if(!userInfo.userData.isAuth) return <Redirect to=\"/login\" />\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <form onSubmit={onSubmitLoginHandler}  className=\"post-question\" >\r\n                <div className=\"posts-title-wrapper\" >\r\n                    <label className=\"new-post-title\" htmlFor=\"title\">Заглавие</label>\r\n                    <div className=\"new-post-second-info\" >\r\n                        Бъдете конкретни и си представете, че задавате въпрос на друг човек\r\n                    </div>\r\n                    <input type=\"text\" id=\"title\" name=\"title\" />\r\n                </div>\r\n\r\n                <div className=\"posts-body-wrapper\">\r\n                    <label className=\"new-post-body\" htmlFor=\"body\">Тяло</label>\r\n                    <div className=\"new-post-second-info\" >\r\n                        Включете цялата информация, от която някой ще се нуждае, за да отговори на вашия въпрос\r\n                    </div>\r\n\r\n                    <div className=\"posts-text-editor\">\r\n                        <SunEditor name=\"body\" height=\"100\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"posts-tags-wrapper\">\r\n                    <label className=\"new-post-tags\" htmlFor=\"tags\">Етикети</label>\r\n                    <div className=\"new-post-second-info\" >\r\n                        Добавете до 1 маркера, за да опишете за какво става въпрос във вашия въпрос\r\n                    </div>\r\n                    <input type=\"text\" id=\"tags\" name=\"tags\" />\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"forum-btn-new-post\" value=\"изпрати\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect, useRef,useContext } from \"react\";\r\nimport parse from \"html-react-parser\";\r\nimport { IsAuthContext } from '../../../../Context/IsAuthContext';\r\n\r\nimport \"./Post.css\";\r\n\r\nimport * as postServices from \"../../postServices\";\r\n\r\nconst Post = ({ history, match }) => {\r\n  \r\n  let userInfo = useContext(IsAuthContext);\r\n  const [postData, setPostData] = useState({\r\n    title: \"\",\r\n    body: \"\",\r\n    tags: \"\",\r\n    author : {\r\n        _id: '',\r\n        username : ''\r\n    }\r\n  });\r\n  const [newTopic, setNewTopic] = useState({\r\n    body : ''\r\n  })\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const topicInput = useRef(null);\r\n\r\n  const sendTopic = () => {\r\n    if(!newTopic) return alert('Kommetar ist leer.')\r\n    if(!userInfo.userData.isAuth) return history.push('/login')\r\n    \r\n\r\n    setIsLoading(true);\r\n    postServices.newTopic(newTopic, match.params.id).then( (topics, err) => {\r\n      if (err) return;\r\n      topicInput.current.value = '';\r\n      setNewTopic('');\r\n    })\r\n  }\r\n\r\n  const topicHandle = (e) => {\r\n    setNewTopic({body : e.target.value});\r\n  }\r\n\r\n  useEffect(() => {\r\n    postServices.getPost(match.params.id).then((data, err) => {\r\n      if (err) return;\r\n\r\n      setPostData(data);\r\n      setIsLoading(false);\r\n    });\r\n\r\n  }, [isLoading]);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div style={{margin: '1rem'}} >\r\n          <div className=\"post-title\">{postData.title ? postData.title : 'Title'}</div>\r\n          <div className=\"post-body\">{postData.author ? parse(postData.body): 'Body'}</div>\r\n          <div className=\"post-author\">{postData.author ? postData.author.username : 'Author'}</div>\r\n          <div className=\"post-footer\">{postData.created_at ? postData.created_at : 'Time'}</div>\r\n      </div>\r\n      <div className=\"post-topic\">\r\n        <button onClick={sendTopic} className=\"forum-btn-new-post\" >Отговори</button>\r\n        <textarea \r\n          ref={topicInput}\r\n          onChange={topicHandle}\r\n          className=\"post-topic-textarea\"\r\n          name=\"new-topic\"\r\n          id=\"new-topic\"\r\n          rows=\"5\">\r\n        </textarea>\r\n      </div>\r\n      <ul className=\"post-topics\">\r\n        <h2>Коментари</h2>\r\n        { postData.post_topics && !isLoading ? (\r\n          postData.post_topics.map(topic => {\r\n            return (\r\n              <li key={topic._id}>\r\n                <div>\r\n                  <div style={{padding: '0.3rem'}}>{topic.body}</div>\r\n                  <div className=\"topic-user-info\">\r\n                    <span > {topic.created_at} </span>\r\n                    <span className=\"topic-author\" >~ {topic.author.username}</span>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            )\r\n          })\r\n          ) : (\r\n            <div className=\"loader\"></div>\r\n          )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { Component } from 'react';\r\n\r\nimport './News.css';\r\n\r\nclass News extends Component {\r\n\r\n    state = {\r\n        isLoading: true,\r\n        newsData: [],\r\n        error: null\r\n    }\r\n\r\n    fetchNews() {\r\n        // Where we're fetching data from\r\n        fetch('http://localhost:5000/news')\r\n            .then(response => response.json())\r\n            // ...then we update the users state\r\n            .then(data =>\r\n                this.setState({\r\n                    newsData: data,\r\n                    isLoading: false,\r\n                })\r\n            )\r\n            // Catch any errors we hit and update the app\r\n            .catch(error => this.setState({ error, isLoading: false }));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchNews();\r\n    }\r\n\r\n    render() {\r\n        const { isLoading, newsData, error } = this.state;\r\n        return (\r\n            <div className=\"main\">\r\n                <h1>Новини от България</h1>\r\n                {error ? <p>{error.message}</p> : null}\r\n\r\n                {!isLoading ? (\r\n                    newsData.map(news => {\r\n                        const { title, author,urlToImage,url, publishedAt } = news;\r\n                        return (\r\n                            <article className=\"article\" key={title}>\r\n                                <img src={urlToImage} alt=\"\"/>\r\n                                <a target=\"__blank\" href={url}><h3>{title}</h3></a>\r\n                                <p>Author: {author}</p>\r\n                                <p>публикувано: {publishedAt}</p>\r\n                            </article>\r\n                        );\r\n                    })\r\n                ) : (\r\n                    <div className=\"loader\"></div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default News;","import News from \"../News\";\r\nimport Forum from \"../Forum\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <div className=\"main\">\r\n      <div style={{display: \"flex\", alignItems: \"baseline\"}}>\r\n        <News />\r\n        <Forum />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","const Work = () => {\r\n\r\n    const onLoginSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(e.target.age.value);\r\n    }\r\n    \r\n    const onSumitClickHandler = (e) => {\r\n        console.log(e.target.parentNode.username.value);\r\n    }\r\n\r\n    const onUsernameChangeHandler = (e) => {\r\n        console.log(e.target.value);\r\n    }\r\n\r\n    return(\r\n        <div className=\"main\" >\r\n            <h1>Очаквайте скоро</h1>\r\n            {/* <form onSubmit={onLoginSubmitHandler} >\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input onChange={onUsernameChangeHandler} type=\"text\" id=\"username\" name=\"name\" />\r\n                <br />\r\n                <br />\r\n                <label htmlFor=\"age\">Age</label>\r\n                <input type=\"number\" id=\"age\" name=\"age\"/>\r\n                <br />\r\n                <br />\r\n                <input type=\"submit\" value=\"Send\"/>\r\n                <br /><br />\r\n                <button type=\"button\" onClick={onSumitClickHandler}>Click Me</button>\r\n            </form> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Work;","//! controlled Components\r\nimport { Component } from 'react';\r\n\r\nconst options = [\r\n    {label: 'IT', value: 'it'},\r\n    {label: 'Engineer', value: 'engineer'},\r\n    {label: 'Unemployed', value: 'unemployed'},\r\n]\r\n\r\n\r\nclass Blog extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: 'Achu',\r\n            age : 18,\r\n            bio : 'Achu is King.',\r\n            occupation : 'unemployed',\r\n        }\r\n\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    }\r\n\r\n    onLoginSubmitHandler(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    onLoginSubmitControlled(e) {\r\n        e.preventDefault();\r\n\r\n        const {username, age } = this.state;\r\n    }\r\n\r\n    onChangeHandler(e){\r\n        this.setState({[e.target.name] : e.target.value})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"main comming_soon\" >\r\n            <h1>Очаквайте скоро</h1>\r\n            {/* <form onSubmit={this.onLoginSubmitHandler} >\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input onChange={this.onChangeHandler} type=\"text\" id=\"username\" name=\"username\" value={this.state.username} />\r\n                <br />\r\n                <br />\r\n                <label htmlFor=\"age\">Age</label>\r\n                <input onChange={this.onChangeHandler} type=\"number\" id=\"age\" name=\"age\" value={this.state.age} />\r\n\r\n                <br />\r\n                <br />\r\n                <label htmlFor=\"occupation\"></label>\r\n                <select name=\"occupation\" id=\"occupation\" onChange={this.onChangeHandler} value={this.state.occupation}>\r\n                    {\r\n                        options.map( (x,index) => (\r\n                            <option key={index + x.value} value={x.value}>{x.label}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <textarea onChange={this.onChangeHandler} name=\"bio\" value={this.state.bio} />\r\n                <br />\r\n                <br />\r\n                <input type=\"submit\" value=\"Send\"/>\r\n                <input type=\"submit\" value=\"Send\" onClick={this.onLoginSubmitControlled.bind(this)} />\r\n                <br /><br />\r\n                <button type=\"button\" onClick={this.onSumitClickHandler}>Click Me</button>\r\n            </form> */}\r\n        </div>\r\n        );\r\n}\r\n\r\n}\r\n\r\nexport default Blog;","const Specpage = () => {\r\n    return(\r\n        <div class=\"main\">\r\n            <h1>\r\n                Очаквайте скоро\r\n            </h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Specpage;","import './Footer.css';\r\n\r\nconst Footer = () => {\r\n\r\n  return(\r\n      <div className=\"footer\">\r\n        <p style={{float: 'right'}} >&copy; 2021 bg-migrant.info</p>\r\n      </div>\r\n  )\r\n};\r\n  \r\n  export default Footer;","import {useState, useEffect} from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { IsAuthContext } from './Context/IsAuthContext';\r\n\r\nimport * as isAuthServices from './services/isAuthService';\r\n\r\nimport Navbar from \"./components/Header/Navbar\";\r\n\r\nimport Register from \"./components/User/Register\";\r\nimport Login from \"./components/User/Login\";\r\nimport Profil from \"./components/User/Profil\"\r\n\r\nimport Forum from \"./components/Forum\";\r\nimport NewPost from \"./components/Forum/posts/NewPost\";\r\nimport Post from \"./components/Forum/posts/Post\";\r\n\r\n\r\nimport Main from \"./components/Main\";\r\nimport News from \"./components/News\";\r\nimport Work from \"./components/Work\";\r\nimport Blog from \"./components/Blog\";\r\nimport Specpage from \"./components/Specpage\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nfunction App() {\r\n\r\n  const [userData, setUserData] = useState({\r\n    isAuth : false,\r\n    user_id : '',\r\n    username : '',\r\n  });\r\n\r\n    useEffect(() => {\r\n        isAuthServices.isAuth()\r\n            .then( (res) => {\r\n                if(res.error){\r\n                    alert('Cannot get cookie.')\r\n                    return;\r\n                }\r\n\r\n                setUserData(res);\r\n            })\r\n            \r\n    }, []);\r\n\r\n  return (\r\n    \r\n\r\n    <div className=\"app\">\r\n          <IsAuthContext.Provider value={{userData, setUserData}}>\r\n            <Navbar />\r\n            <Switch>\r\n              <Route path=\"/\" exact component={Main}/>\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route path=\"/register\" component={Register} />\r\n              <Route path=\"/profil\" component={Profil} />\r\n\r\n              <Route path=\"/posts/new\" exact component={NewPost} />\r\n              <Route path=\"/posts/:id\" component={Post} />\r\n\r\n              <Route path=\"/forum\" component={Forum} />\r\n              <Route path=\"/news/:country\" component={News} />\r\n              <Route path=\"/work\" component={Work} />\r\n              <Route path=\"/blog\" component={Blog} />\r\n              <Route path=\"/specpage\" component={Specpage} />\r\n              <Route component={() => <h1> Error Page!</h1>} />\r\n            </Switch>\r\n          </IsAuthContext.Provider>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const isAuth = (token) => {\r\n\r\n    // Simple POST request with a JSON body using fetch\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        // body: JSON.stringify(token),\r\n        mode: 'cors',\r\n        credentials: 'include'\r\n    };\r\n\r\n    return fetch('http://localhost:5000/', requestOptions)\r\n        .then( res => res.json())\r\n        .catch(function(error) {\r\n            console.log('Looks like there was a problem: \\n', error);\r\n        });\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}